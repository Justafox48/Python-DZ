import telebot
from telebot import types
import re
import requests
import urllib3
http = urllib3.PoolManager()
from statistics import mode
import nltk
#nltk.download('averaged_perceptron_tagger_ru')
#nltk.download('punkt')

bot = telebot.TeleBot('5615009716:AAE9o2yXbqNIrxKr4vXjkxl6wNhlolcT-kw')


@bot.message_handler(commands=['start'])
def start_bot(message):
    bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å? –ù–∞–ø–∏—à–∏ /help")


@bot.message_handler(commands=['help'])
def get_help(message):
    if message.text == '/help':
        keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        item_btn1 = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∞–π—Ç')
        item_btn2 = types.KeyboardButton('–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç')
        item_btn3 = types.KeyboardButton('–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º')
        keyboard.add(item_btn1, item_btn2, item_btn3)
        bot.send_message(message.chat.id, "–ß—Ç–æ —è –º–æ–≥—É –¥–ª—è —Ç–µ–±—è —Å–¥–µ–ª–∞—Ç—å?", reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
	if message.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∞–π—Ç':
		bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ URL-–∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∏–ª–∏ "–¥—Ä—É–≥–æ–µ" –¥–ª—è –≤—ã—Ö–æ–¥–∞')
		bot.register_next_step_handler(message, get_URL); 
	elif message.text == '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç':
		bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ "–¥—Ä—É–≥–æ–µ" –¥–ª—è –≤—ã—Ö–æ–¥–∞')
		bot.register_next_step_handler(message, get_analysis);
	elif message.text == '–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º':
		bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–ª–∏ "–¥—Ä—É–≥–æ–µ" –¥–ª—è –≤—ã—Ö–æ–¥–∞')
		bot.register_next_step_handler(message, get_calc); 
	else:	
		bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, /help')

#–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞
def get_URL(message):
	global URL
	URL = message.text.lower()
	if URL == '–¥—Ä—É–≥–æ–µ':
		bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ —á–µ—Ä–µ–∑ /help')
	else: 
		try:
			response = requests.get(URL)
			bot.send_message(message.from_user.id, '–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, —É—Ä–∞! ü•≥ ')
		except:
			bot.send_message(message.from_user.id, '–°–∞–π—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ—Å—Ç–∏ üíî ')


#–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
def get_calc(message):
	global string_numbers
	string_numbers = message.text.lower()
	if string_numbers == '–¥—Ä—É–≥–æ–µ':
		bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ —á–µ—Ä–µ–∑ /help')
	else: 
		calc = types.ReplyKeyboardMarkup(row_width=2)
		item_btn1 = types.KeyboardButton('+')
		item_btn2 = types.KeyboardButton('-')
		item_btn3 = types.KeyboardButton('*')
		item_btn4 = types.KeyboardButton('/')
		calc.add(item_btn1, item_btn2, item_btn3, item_btn4)
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä:', reply_markup=calc)
		bot.register_next_step_handler(message, calc_do)

def calc_do(message):
	try: 
		counts = string_numbers.split()
		if message.text == '+':
			summa = int(counts[0]) + int(counts[1])
			bot.send_message(message.from_user.id, f'–°—É–º–º–∞ —Ç–≤–æ–∏—Ö —á–∏—Å–µ–ª —Ä–∞–≤–Ω–∞ {summa}')
		elif message.text == '-':
			minus = int(counts[0]) - int(counts[1])
			bot.send_message(message.from_user.id, f'–†–∞–∑–Ω–æ—Å—Ç—å —Ç–≤–æ–∏—Ö —á–∏—Å–µ–ª —Ä–∞–≤–Ω–∞ {minus}')
		elif message.text == '*':
			proizv = int(counts[0]) * int(counts[1])
			bot.send_message(message.from_user.id, f'–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö —á–∏—Å–µ–ª —Ä–∞–≤–Ω–æ {proizv}')
		elif message.text == '/':
			if int(counts[1]) == 0:
				bot.send_message(message.from_user.id, '–ù–∞ 0 –¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è')
			else:
				chast = int(counts[0]) / int(counts[1])
				bot.send_message(message.from_user.id, f'–ß–∞—Å—Ç–Ω–æ–µ —á–∏—Å–µ–ª —Ä–∞–≤–Ω–æ {chast}')
	except:
		bot.send_message(message.from_user.id, '–û—Å—Ç–∞–Ω–æ–≤–∏—Å—å, —ç—Ç–æ —É–∂–µ –ø–µ—Ä–µ–±–æ—Ä!')

	calc = types.ReplyKeyboardRemove(selective=True)
	bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–ª–∏ "–¥—Ä—É–≥–æ–µ" –¥–ª—è –≤—ã—Ö–æ–¥–∞: ', reply_markup=calc)
	bot.register_next_step_handler(message, get_calc)

#–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞
def get_analysis(message):
	user_text = message.text.lower()
	if user_text == '–¥—Ä—É–≥–æ–µ':
		bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ —á–µ—Ä–µ–∑ /help')
	else:
		final_text = re.sub(r'[^\w\s]','', user_text)
		all_words = final_text.split() #—Å–ø–∏—Å–æ–∫ –í–°–ï–• —Å–ª–æ–≤ –±–µ–∑ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
		longest_word = max(all_words, key=len)
		text_dict = {}
		for word in all_words:
			if word in text_dict:
				text_dict[word] += 1
			else:
				text_dict[word] = 1

		new_text = re.sub(r'[.!?]\s', r'|', user_text)
		count_sent = len(new_text.split('|')) #—Å—á–∏—Ç–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

		sl_parts = {'CONJ', 'PR'}
		new_words = [word for word, pos in nltk.pos_tag(all_words, lang='rus') if pos not in sl_parts] #—Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –ë–ï–ó —Å–æ—é–∑–æ–≤, –ø—Ä–µ–¥–ª–æ–≥–æ–≤ –∏ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
		    	
		bot.send_message(message.from_user.id, f'''–ê–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: 
		–≤—Å–µ–≥–æ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ - {len(all_words)},
		–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π - {count_sent}, 
		—Å–∞–º–æ–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ —Å–ª–æ–≤–æ (–Ω–µ —É—á–∏—Ç—ã–≤–∞—è –ø—Ä–µ–¥–ª–æ–≥–∏ –∏ —Å–æ—é–∑—ã) - "{mode(new_words)}", 
		—Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ - "{longest_word}",  
		–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞: {text_dict},
		–≤—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ - {len(text_dict)}''')
        

bot.polling(none_stop=True, interval=0)